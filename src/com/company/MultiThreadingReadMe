
Multithreading and Multiprocessing both are used to achieve the multi tasking

Os -> process1 , process2 , process 3 ( MULTIPROCESS)

whithin a process multitasking -> thread is used ( light weight )

In a nut shell..
thread use shared memory area
thread -> faster context switching
A thread is a light weight and process is a heavy weight

Imp - > Flow of control in java

1. without threading

main()
   â””â”€â”€> func1()
            â””â”€â”€> func2()
                   â””â”€â”€> END

2. With Threading


main()
 â”œâ”€â”€> func1() â†’ runs in Thread-1
 â””â”€â”€> func2() â†’ runs in Thread-2


create a thread

There are two way to create a thread in java
1. By extending thread class
2. By implementing Rummable interface

Life Cycle of a thread
ðŸ”„ Life Cycle of a Thread
	1.	New: Thread is created but not started.
	2.	Runnable: start() is called, ready to run.
	3.	Running: Thread is currently executing.
	4.	Blocked/Waiting: Waiting for resources or signal.
	5.	Terminated: Execution is complete or stopped.

	New --> Runnable --> Running --> Terminated
                        â†•
                  Waiting / Blocked


Concurrency is the task of running and managing the multiple computation at same time
Parallelism is the task of running multiple computation simulteneously
concurrency can be done by using single processing unit .


//Agrument and parameter diff
// Parameter: 'name' is the parameter
void greet(String name) {
    System.out.println("Hello, " + name);
}

// Argument: "Abhinav" is the argument
greet("Abhinav");

